<?php
/**
 * Created by PhpStorm.
 * User: igorm
 * Date: 27/06/2016
 * Time: 18:54
 */
/* SELECT id from produto_filial where produto_id = (SELECT id from produto WHERE codigo_global='242337'); */
namespace console\controllers\actions\mercadolivre;


use common\models\Filial;
use common\models\ProdutoFilial;
use Livepixel\MercadoLivre\Meli;
use Yii;
use yii\helpers\ArrayHelper;

class UpdateAction extends Action
{
    public function run()
    {
        $meli = new Meli(static::APP_ID, static::SECRET_KEY);
        $filials = Filial::find()
            ->andWhere(['IS NOT', 'refresh_token_meli', null])
            //->andWhere(['id' => 81])
            ->all();

        /* @var $filial Filial */
        foreach ($filials as $filial) {
            //echo "Inicio da filial: " . $filial->nome . "\n";

            $user = $meli->refreshAccessToken($filial->refresh_token_meli);
            $response = ArrayHelper::getValue($user, 'body');

            if (is_object($response) && ArrayHelper::getValue($user, 'httpCode') < 400) {
                $meliAccessToken = $response->access_token;

                $produtoFilials = $filial->getProdutoFilials()
                    ->andWhere(['is not','meli_id',null])
                    //->andWhere(['>','quantidade',0])
		    //->andWhere(['produto_filial.meli_id
		    //->andWhere(['produto_filial.id' => [111197,   34184,  108352,   53113,   33976,   72390,   37254,  113152,   37506,   38361,  108235,  108431,  108588,  108592,  111243,  113298,  113379,   37264, 109308,   34359,   34872,   72730,  101524,  103401,  110775,  110872,  110923,  104574,  111214,  104827,  106684,  106802,  106806,  106752,  106751,  106803,  106864,  107002,  107477,  107514,  104196,  104881,  106733,  106730,  106805,  111213,   36112,   72685,  101817,   34141,   36029,   34211,   34150,   34389,   34953,   34248,   34263,   36515,   34867,   34038,   37201,   37270,   37385,   37519,   36158,   36243,   34741,   37334,   37045,   34088,   34236,   34454,   34181,   34874,   36149,   37520,   34410,   34396,  102180,  107992,  109473,  108351,  109202,  109481,   72233,   72253,   72301,  106714,  100434,   72294,   72369,  100551,  100678,  100792,  100592,   53219,   53444,   53090,   57638,  112157,  112159,  112189,  112412,   35376,   33955,   37337,   56803,  100729,  111193,  100989,   34016,   34876,  112291,   56435,  133115,   72339,   37047,  107273,  133478,  133486]])
		    ->orderBy('produto_filial.id')
                    ->all();

                /* @var $produtoFilial ProdutoFilial */
                foreach ($produtoFilials as $k => $produtoFilial) {
		    //echo $produtoFilial->produto->nome . "\n ";
                    //if ($k > 13560 && $produtoFilial->produto->fabricante_id != null) {
		    if ($produtoFilial->produto->fabricante_id != null) {
		    	//echo $k ." - ". $produtoFilial->id . "\n";
	
	                    $subcategoriaMeli = $produtoFilial->produto->subcategoria->meli_id;
	                    if (!isset($subcategoriaMeli)) {
	                        continue;
	                    }
	                    if (is_null($produtoFilial->valorMaisRecente)) {
	                        Yii::error("Produto Filial: {$produtoFilial->produto->nome}({$produtoFilial->id}), não possui valor",
	                            'error_yii');
	                        continue;
	                    }
			
	                    //$page = $this->controller->renderFile(__DIR__ . '/../../../../lojista/views/mercado-livre/produto.php',['produto' => $produtoFilial]);
			    $page = $this->controller->renderFile(__DIR__ . '/../../../../lojista/views/mercado-livre/produtoML.php',['produto' => $produtoFilial]);
	
	                    $title = Yii::t('app', '{nome} ({cod})', [
	                        'cod' => $produtoFilial->produto->codigo_global,
	                        'nome' => $produtoFilial->produto->nome
	                    ]);
	                    //Update Item
			    //echo "******sd******";
	                    $body = [
	                        "title" => ((strlen($title) <= 60) ? $title : substr($title, 0, 60)),
				"category_id" => utf8_encode($subcategoriaMeli),
	                        "price" => round($produtoFilial->getValorMercadoLivre(), 2),
	                        "available_quantity" => $produtoFilial->quantidade,
				'attributes' =>[
                	            [
        	                        'id' => 'PART_NUMBER',
        	                        'name' => 'Número da peça',
        	                        'value_id' => NULL,
        	                        'value_name' => $produtoFilial->produto->codigo_global,
        	                        'value_struct' => NULL,
        	                        'attribute_group_id' => 'DFLT',
        	                        'attribute_group_name' => 'Outros',
        	                    ],
        	                    [
        	                        "id"=> "BRAND",
        	                        "name"=> "Marca",
        	                        "value_id"=> null,
        	                        "value_name"=> $produtoFilial->produto->fabricante->nome,
        	                        "value_struct"=> null,
        	                        "attribute_group_id"=> "OTHERS",
        	                        "attribute_group_name"=> "Outros"
                        	    ],
	
	                        ]
	
	                    ];
   			    //echo "------0------";
        	            $response = $meli->put(
        	                "items/{$produtoFilial->meli_id}?access_token=" . $meliAccessToken,
        	                $body,
        	                []
        	            );
			    //echo "------1-----";
        	            Yii::info($response, 'mercado_livre_update');
        	            if ($response['httpCode'] >= 300) {
        	                Yii::error($response['body'], 'mercado_livre_update');
        	            }
	
	                    //Update Descrição
	                    //$body = ['text' => $page];
			    $body = ['plain_text' => $page];
	                    $response = $meli->put(
	                        "items/{$produtoFilial->meli_id}/description?access_token=" . $meliAccessToken,
	                        $body,
        	                []
	                    );
	                    Yii::info($response, 'mercado_livre_update');
        	            if ($response['httpCode'] >= 300) {
        	                Yii::error($response['body'], 'mercado_livre_update');
        	            }
	
			    //1 para me2 (Mercado Envios)
		            //2 para not_especified (a combinar)
		            //3 para customizado

			    switch ($produtoFilial->envio) {
				case 1:
	        			$modo = "me2";
	        			break;
				case 2:
	        			$modo = "not_specified";
	        			break;
	    			case 3:
	        			$modo = "custom";
	       				break;
			    }
			    //echo "$".$modo."$";
        	            //Update Imagem
        	            $body = [
        	                "pictures" => $produtoFilial->produto->getUrlImagesML(),
				"available_quantity" => $produtoFilial->quantidade,
				"price" => round($produtoFilial->getValorMercadoLivre(), 2),
        	                "shipping" => [
        	                    "mode" => $modo,
        	                    "local_pick_up" => true,
        	                    "free_shipping" => false,
        	                    "free_methods" => [],
        	                ],
        	                "warranty" => "6 meses",
        	            ];
	
	                    $response = $meli->put(
	                        "items/{$produtoFilial->meli_id}?access_token=" . $meliAccessToken,
	                        $body,
	                        []
	                    );
			    //print_r($response);
			    print_r(ArrayHelper::getValue($response, 'body.permalink'));echo "\n\n";
	                    Yii::info($response, 'mercado_livre_update');
	                    if ($response['httpCode'] >= 300) {
	                        Yii::error($response['body'], 'mercado_livre_update');
	                    }
	                    //echo "ok \n";
		    }
                }
            }
            //echo "Fim da filial: " . $filial->nome . "\n";
        }
    }
}
