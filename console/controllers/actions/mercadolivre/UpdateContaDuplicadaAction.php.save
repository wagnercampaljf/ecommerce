<?php
/**
 * Created by PhpStorm.
 * User: igorm
 * Date: 27/06/2016
 * Time: 18:54
 */
/* SELECT id from produto_filial where produto_id = (SELECT id from produto WHERE codigo_global='242337'); */
namespace console\controllers\actions\mercadolivre;


use common\models\Filial;
use common\models\ProdutoFilial;
use Livepixel\MercadoLivre\Meli;
use Yii;
use yii\helpers\ArrayHelper;

class UpdateContaDuplicadaAction extends Action
{
    public function run()
    {
	$meli = new Meli(static::APP_ID, static::SECRET_KEY);

    	$filials = Filial::find()
            ->andWhere(['IS NOT', 'refresh_token_meli', null])
            ->andWhere(['id' => [43]])
            //->andWhere(['<>','id', 92])
            ->all();

        /* @var $filial Filial */
        foreach ($filials as $filial) {
            echo "Inicio da filial: " . $filial->nome . "\n";
            //continue;

            $user = $meli->refreshAccessToken($filial->refresh_token_meli);
            $response = ArrayHelper::getValue($user, 'body');

            if (is_object($response) && ArrayHelper::getValue($user, 'httpCode') < 400) {

       		$meliAccessToken = $response->access_token;

                $produtoFilials = $filial->getProdutoFilials()
                                        ->andWhere(['is not','meli_id',null])
                                        ->andWhere(['is not','produto_filial_origem_id',null])
                                        //->andWhere(['=','id',148254])
                    		        //->andWhere(['>=','produto_filial.id',156798])
                                        //->andWhere(['produto_filial.id' => [176454, 164931, 181930]])
					//->joinWith('produto')
					//->andWhere(['produto.codigo_global' => ['236021', '425223', '445699', '445835', '450593', '450594', '027063', '439110', '434909', '086018', '241222', '419228', '424768', '433834', '423399', '126003', '156007', '445467', '446591', '423750', '445367', '456683', '438254', '439520', '200319', '435262', '445163', '062001', '445108', '437980', '439519', '442073', '446828', '447230', '438109', '423412', '423506', '427605', '438567', '417541', '417542', '446606', '448063', '448064', '448065', '421801', '034017', '104048', '210008', '444159', '444161', '445711', '445712', '446225', '450047', '453306', '458195', '077031', '421780', '425966', '446829', '454653', '417321', '423471', '450570', '423420', '444280', '423405', '001047', '067017', '434910', '442511', '122010', '442963', '442964', '442965', '443908', '443910', '443927', '447689', '455070', '423749', '452549', '452584', '426019', '001031', '021026', '104023', '421937', '447354', '447562', '459323', '438960', '438961', '077013', '423725', '449810', '454853', '454854', '200114', '435303', '433216', '442678', '200062', '156021', '422920', '423554', '442878', '443889', '443890', '445234', '445235', '445236', '445237', '134005', '423468', '001036', '446886', '447355', '447530', '447560', '001062', '099012', '426597', '457589', '452564', '454928', '438252', '245055', '435440', '435454', '435472', '454743', '454744', '319001', '425213', '425214', '447696', '447962', '426014', '001033', '435278', '424788', '435272', '077005', '421260', '421353', '428547', '422784', '455357', '417478', '437700', '444816', '444817', '446590', '425302', '220007', '435474', '442655', '442656', '447961', '211113', '455361', '060004', '438260', '438261', '442946', '458189', '115061', '446673', '432593', '432594', '432595', '245086', '422940', '444340', '447691', '447692', '373001', '439523', '144024', '200108', '245009', '437967', '156023', '241220', '446664', '448013', '449780', '419383', '447726', '245011', '421976', '422796', '260013', '423726', '447212', '021002', '436120', '436121', '453682', '424003', '419281', '455509', '455553', '437362', '421974', '435356', '437902', '448021', '447989', '421788', '421790', '422774', '439509', '427616', '457977', '457978', '023007', '213081', '422718', '435152', '437418', '442943', '454290', '455061', '455066', '245008', '200065', '297005', '297006', '433217', '433220', '425356', '425357', '448031', '453373', '453374', '453375', '453376', '456290', '077036', '260001', '424565', '424566', '424567', '424568', '424569', '419306', '433825', '456528', '456529', '456530', '456532', '419305', '439925', '439928', '153089', '153090', '437389', '439443', '445238', '445239', '445240', '445241', '200239', '446558', '437398', '437709', '437770', '245016', '444210', '447047', '437443', '245017', '444125', '421417', '421419', '421423', '455186', '196023', '438598', '448097', '457905', '439493', '441373', '441374', '240314', '437351', '438723', '421253', '421255', '421258', '421259', '421261', '421264', '421271', '421273', '421276', '133011', '444721', '444722', '444723', '444780', '444813', '009064', '428584', '447052', '421311', '421313', '421316', '440242', '446549', '423251', '423252', '437884', '437885', '444176', '437236', '448094', '165014', '422795', '432972', '455134', '455135', '200061', '437018', '434931', '434932', '447426', '439454', '450572', '439130', '439131', '445380', '447952', '457860', '457932', '099023', '453705', '200164', '423493', '459294', '437412', '436830', '453146', '422131', '453704', '445692', '447421', '453643', '453656', '196001', '435301', '445033', '445036', '264003', '423116', '437878', '447831', '447832', '447833', '447834', '447835', '447836', '447837', '447838', '451876', '437047', '437116', '437117', '437118', '424743', '447777', '458908', '458919', '458922', '458924', '458926', '458928', '458930', '458931', '451875', '457777', '458913', '458914', '458915', '458916', '458917', '458918', '459362', '459540', '459542', '459548', '459550', '459552', '459554', '329008', '435166', '455279', '455280', '455281', '455282', '438357', '458047', '458048', '458049', '458050', '458395', '458396', '458397', '458398', '458610', '458611', '458612', '458613', '446854', '423348', '090042', '430331', '430332', '430333', '352142', '352146', '352150', '352154', '428334', '428335', '428336', '428338', '428339', '428340', '428341', '428342', '428344', '431286', '431287', '431288', '431367', '431368', '431369', '431376', '431377', '431378', '431400', '431401', '431402', '431403', '431404', '431405', '431406', '431407', '431408', '431412', '431413', '431414', '431415', '431416', '431417', '431418', '431419', '431420', '431815', '431816', '431817', '431821', '431822', '431823', '431827', '431828', '431829', '431833', '431834', '431835', '435071', '435072', '435073', '435074', '440059', '440060', '440061', '440062', '440067', '440068', '440069', '440070', '448912', '448913', '448914', '448915', '448924', '448925', '448926', '448927', '455376', '455377', '455378', '455379', '458481', '458482', '458483', '458484', '458539', '458540', '458541', '458542', '458543', '458544', '458545', '458546', '458547', '458548', '458549', '458550', '458551', '458552', '458553', '458554', '458555', '458556', '458557', '458558', '458559', '458560', '458561', '458562', '459628', '459629', '459630', '459631', '459632', '459633', '459634', '459635', '453426', '453427', '352118', '431764', '431765', '431766', '458375', '458376', '458377', '458378', '091088', '430803', '430804', '430805', '448778', '448779', '448782', '448783', '448786', '448787', '448790', '448791', '448794', '448795', '448798', '448799', '448802', '448803', '448806', '448807', '448810', '448811', '448814', '448815', '448818', '448819', '448822', '448823', '455959', '455960', '455961', '455962', '455963', '455964', '455965', '455966', '455967', '455968', '455969', '455970', '455971', '455972', '455973', '455974', '455979', '455980', '455981', '455982', '455983', '455984', '455985', '455986', '455987', '455988', '455989', '455990', '455991', '455992', '455993', '455994', '455995', '455996', '455997', '455998', '455999', '456000', '456001', '456002', '456011', '456012', '456013', '456014', '456015', '456016', '456017', '456018', '456019', '456020', '456021', '456022', '456023', '456187', '456188', '456189', '456190', '456191', '456192', '456193', '456194', '456195', '456196', '456197', '456198', '456199', '456200', '456201', '456202', '457052', '457053', '457054', '457055', '457064', '457065', '457066', '457067', '458323', '458324', '458525', '458526', '458600', '458601', '458606', '458608', '458609', '458618', '458619', '458801', '458802', '458803', '459261', '459262', '459263', '459264', '459816', '459817', '421469', '418848', '418850', '418880', '418888', '418889', '435647']])
                                        ->orderBy('produto_filial.id')
                                        ->all();

                foreach ($produtoFilials as $k => $produto_filial) {
                    //echo $produto_filial->produto->nome . "\n ";
                    if ($produto_filial->produto_filial_origem_id == NULL){
                        continue;
                    }
                    $produtoFilial = ProdutoFilial::find()->andWhere(['=', 'id', $produto_filial->produto_filial_origem_id])->one();

		    if (!$produtoFilial){
			continue;
		    }

                    if ($produtoFilial->produto->fabricante_id != null) {
                        echo "\n".$k ." - Cópia: ".$produto_filial->id." - ".$produto_filial->meli_id ." - Origem: ". $produtoFilial->id ." - ".$produtoFilial->meli_id." - ";
                        //Aqui começa o código

			//PREÇO
                    	/*$preco = round($produtoFilial->getValorMercadoLivre(), 2);
                    	if ($preco > 500){
				$preco = round(($preco * 1.065), 2);
			}
			else{
				$preco = round(($preco * 0.9), 2);
			}*/
			//PREÇO

                        $body = [
				"available_quantity" => 0,
				//"price" => $preco,
				//"pictures" => $produtoFilial->produto->getUrlImagesML(),
				/*"shipping" => [
                                                "mode" => "me2",
                                                "local_pick_up" => true,
                                                "free_shipping" => false,
                                              	"free_methods" => [],
                                              ],*/
                        ];
	                $response = $meli->put("items/{$produto_filial->meli_id}?access_token=" . $meliAccessToken, $body, []);

	                if ($response['httpCode'] >= 300) {
				echo "ERROR \n";
				print_r($response);
        		}
        		else {
            			echo "ok \n";
            			//print_r($response);
				//print_r(ArrayHelper::getValue($response, 'body.permalink'));
	                }
                        //Aqui termina o código
                    }
                }
            }
            echo "Fim da filial: " . $filial->nome . "\n";
        }
    }
}

